<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Socket.io Chat</title>
    <link rel="stylesheet" href="../stylesheet/index.css">
   
</head>
<body>

<div id="nameInput">
    <label for="userName">Enter your name:</label>
    <input type="text" id="userName" placeholder="Your Name">
    <button id="continueButton" onclick="startChat()">Continue</button>
</div>

<div id="chatbox">
    <div id="messages"></div>
    <input type="text" id="inputMessage" placeholder="Type your message...">
    <button id="sendButton" onclick="sendMessage()">Send</button>
</div>

<script src="https://cdn.socket.io/4.1.2/socket.io.min.js"></script>
<script>
    const socket = io();
    const nameInput = document.getElementById('nameInput');
    const userNameInput = document.getElementById('userName');
    const chatbox = document.getElementById('chatbox');
    const messagesContainer = document.getElementById('messages');
    const inputMessage = document.getElementById('inputMessage');

    let userName;

    function startChat() {
        userName = userNameInput.value.trim();
        if (userName !== '') {
            nameInput.style.opacity = '0';
            setTimeout(() => {
                nameInput.style.display = 'none';
                chatbox.style.display = 'block';
                socket.emit('user-joined', userName);
            }, 300);
        }
    }

    function sendMessage() {
        const messageText = inputMessage.value.trim();
        if (messageText !== '') {
            const message = {
                text: messageText,
                from: userName,
            };

            socket.emit('user-message', message);
            inputMessage.value = '';
        }
    }

    socket.on('message', (message) => {
        const messageElement = document.createElement('div');
        messageElement.classList.add('messageContainer');

        const messageText = document.createElement('div');
        messageText.classList.add('messageText');
        messageText.innerText = `${message.from}: ${message.text}`;

        if (message.from === userName) {
            messageText.classList.add('italic');
            messageText.style.backgroundColor = '#d1ffd1';
            messageText.style.textAlign = 'right';
        } else {
            messageText.style.backgroundColor = '#ffe6e6';
        }

        const timestamp = document.createElement('div');
        timestamp.classList.add('timestamp');
        timestamp.innerText = getTimeString();
        messageText.appendChild(timestamp);

        messageElement.appendChild(messageText);
        messagesContainer.appendChild(messageElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    });

    function getTimeString() {
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0');
        return `${hours}:${minutes}`;
    }
</script>

</body>
</html>
